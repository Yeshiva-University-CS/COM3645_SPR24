Tokens:

       PROGRAM : PROGRAM
    IDENTIFIER : SquareRootTable
     SEMICOLON : ;
         BEGIN : BEGIN
       WRITELN : writeln
        LPAREN : (
        STRING : "Square Root Table"
         COLON : :
       INTEGER : 60
        RPAREN : )
     SEMICOLON : ;
       WRITELN : writeln
     SEMICOLON : ;
         WRITE : write
        LPAREN : (
        STRING : "     "
        RPAREN : )
     SEMICOLON : ;
    IDENTIFIER : i
  COLON_EQUALS : :=
       INTEGER : 0
     SEMICOLON : ;
        REPEAT : REPEAT
    IDENTIFIER : x
  COLON_EQUALS : :=
    IDENTIFIER : i
         SLASH : /
       INTEGER : 10
     SEMICOLON : ;
         WRITE : write
        LPAREN : (
    IDENTIFIER : x
         COLON : :
       INTEGER : 10
         COLON : :
       INTEGER : 1
        RPAREN : )
     SEMICOLON : ;
    IDENTIFIER : i
  COLON_EQUALS : :=
    IDENTIFIER : i
          PLUS : +
       INTEGER : 1
         UNTIL : UNTIL
    IDENTIFIER : i
        EQUALS : =
       INTEGER : 10
     SEMICOLON : ;
       WRITELN : writeln
     SEMICOLON : ;
    IDENTIFIER : row
  COLON_EQUALS : :=
       INTEGER : 1
     SEMICOLON : ;
        REPEAT : REPEAT
         WRITE : write
        LPAREN : (
    IDENTIFIER : row
         COLON : :
       INTEGER : 5
         COLON : :
       INTEGER : 0
        RPAREN : )
     SEMICOLON : ;
    IDENTIFIER : i
  COLON_EQUALS : :=
       INTEGER : 0
     SEMICOLON : ;
        REPEAT : REPEAT
    IDENTIFIER : number
  COLON_EQUALS : :=
    IDENTIFIER : row
          PLUS : +
    IDENTIFIER : i
         SLASH : /
       INTEGER : 10
     SEMICOLON : ;
    IDENTIFIER : root
  COLON_EQUALS : :=
    IDENTIFIER : number
     SEMICOLON : ;
    IDENTIFIER : prev
  COLON_EQUALS : :=
    IDENTIFIER : root
     SEMICOLON : ;
        REPEAT : REPEAT
    IDENTIFIER : root
  COLON_EQUALS : :=
        LPAREN : (
    IDENTIFIER : number
         SLASH : /
    IDENTIFIER : root
          PLUS : +
    IDENTIFIER : root
        RPAREN : )
         SLASH : /
       INTEGER : 2
     SEMICOLON : ;
    IDENTIFIER : diff
  COLON_EQUALS : :=
    IDENTIFIER : prev
         MINUS : -
    IDENTIFIER : root
     SEMICOLON : ;
    IDENTIFIER : prev
  COLON_EQUALS : :=
    IDENTIFIER : root
     SEMICOLON : ;
         UNTIL : UNTIL
    IDENTIFIER : diff
     LESS_THAN : <
          REAL : 0.000001
     SEMICOLON : ;
         WRITE : write
        LPAREN : (
    IDENTIFIER : root
         COLON : :
       INTEGER : 10
         COLON : :
       INTEGER : 6
        RPAREN : )
     SEMICOLON : ;
    IDENTIFIER : i
  COLON_EQUALS : :=
    IDENTIFIER : i
          PLUS : +
       INTEGER : 1
         UNTIL : UNTIL
    IDENTIFIER : i
        EQUALS : =
       INTEGER : 10
     SEMICOLON : ;
       WRITELN : writeln
     SEMICOLON : ;
    IDENTIFIER : row
  COLON_EQUALS : :=
    IDENTIFIER : row
          PLUS : +
       INTEGER : 1
         UNTIL : UNTIL
    IDENTIFIER : row
        EQUALS : =
       INTEGER : 26
     SEMICOLON : ;
           END : END
        PERIOD : .
           EOF : <EOF>
